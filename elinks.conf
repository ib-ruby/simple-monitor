## ELinks 0.12pre6 configuration file

## This is ELinks configuration file. You can edit it manually,
## if you wish so; this file is edited by ELinks when you save
## options through UI, however only option values will be altered
## and missing options will be added at the end of file; if option
## is not written in this file, but in some file included from it,
## it is NOT counted as missing. Note that all your formatting,
## own comments and so on will be kept as-is.
##
## Obviously, if you don't like what ELinks is going to do with
## this file, you can change it by altering the config.saving_style
## option. Come on, aren't we friendly guys after all?



##############################
# Automatically saved options
#

## config 
#  Configuration handling options.

  ## config.saving_style_w [0|1]
  #  This is internal option used when displaying a warning about obsolete
  #  config.saving_style. You shouldn't touch it.
  set config.saving_style_w = 1


## document 
#  Document options.

  ## document.browse 
  #  Document browsing options (mainly interactivity).

    ## document.browse.forms 
    #  Options for handling of the forms interaction.

      ## document.browse.forms.auto_submit [0|1]
      #  Automagically submit a form when enter is pressed with a text field
      #  selected.
      set document.browse.forms.auto_submit = 1

      ## document.browse.forms.confirm_submit [0|1]
      #  Ask for confirmation when submitting a form.
      set document.browse.forms.confirm_submit = 0


    ## document.browse.refresh [0|1]
    #  Automatically follow document-specified refresh directives ('<meta>
    #  refresh' tags). Web-page authors use these to instruct the browser to
    #  reload a document at a given interval or to load another page. Regardless
    #  of the value the refresh URI is accessible as a link.
    #  
    #  Use the document.browse.minimum_refresh_time to control the minimum
    #  number of seconds a refresh will wait.
    set document.browse.refresh = 1

    ## document.browse.minimum_refresh_time <num>
    #  The minimum number of milliseconds that should pass before refreshing. If
    #  set to zero the document refresh time is used unchanged. It can fix going
    #  back in history for some sites that use refreshing with zero values.
    set document.browse.minimum_refresh_time = 1000


  ## document.cache 
  #  Cache options.

    set document.cache.memory.size = 0
    ## document.cache.cache_redirects [0|1]
    #  Cache even redirects sent by server (usually thru HTTP by a 302 HTTP code
    #  and a Location header). This was the original behaviour for quite some
    #  time, but it causes problems in a situation very common to various web
    #  login systems - frequently, when accessing a certain location, they will
    #  redirect you to a login page if they don't receive an auth cookie, the
    #  login page then gives you the cookie and redirects you back to the
    #  original page, but there you have already cached redirect back to the
    #  login page! If this option has value of 0, this malfunction is fixed, but
    #  occasionally you may get superfluous (depends on how you take it ;-)
    #  requests to the server. If this option has value of 1, experienced users
    #  can still workaround it by clever combination of usage of reload, jumping
    #  around in session history and hitting ctrl+enter.
    #  
    #  Note that this option is checked when retrieving the information from
    #  cache, not when saving it to cache - thus if you enable it, even previous
    #  redirects will be taken from cache instead of asking the server.
    set document.cache.cache_redirects = 0

    ## document.cache.ignore_cache_control [0|1]
    #  Ignore Cache-Control and Pragma server headers. When set, the document is
    #  cached even with 'Cache-Control: no-cache'.
    set document.cache.ignore_cache_control = 0

    ## document.cache.revalidation_interval <num>
    #  Period in seconds that a cache entry is considered to be up-to-date. When
    #  a document is loaded and this interval has elapsed since the document was
    #  initially loaded or most recently revalidated with the server, the server
    #  will be checked in case there is a more up-to-date version of the
    #  document.
    #  
    #  A value of -1 disables automatic revalidation.
    set document.cache.revalidation_interval = 5


  ## document.colors 
  #  Default document color settings.

    ## document.colors.text <color|#rrggbb>
    #  Default text color.
    set document.colors.text = "gray75"

    ## document.colors.background <color|#rrggbb>
    #  Default background color.
    set document.colors.background = "black"



## terminal 
#  Terminal options.

  ## terminal.xterm-256color 
  #  Options specific to this terminal type (according to $TERM value).

    ## terminal.xterm-256color.colors <num>
    set terminal.xterm-256color.colors = 3
    ## terminal.xterm-256color.utf_8_io [0|1]
    set terminal.xterm-256color.utf_8_io = 1
    ## terminal.xterm-256color.type <num>
    set terminal.xterm-256color.type = 1


## ui 
#  User interface options.

  ## ui.language <language>
  #  Language of user interface. 'System' means that the language will be
  #  extracted from the environment dynamically.
  set ui.language = "System"





##############################
# Automatically saved options
#

## terminal 
#  Terminal options.

  ## terminal.screen 
  #  Options specific to this terminal type (according to $TERM value).

    ## terminal.screen.colors <num>
    set terminal.screen.colors = 1
    ## terminal.screen.utf_8_io [0|1]
    set terminal.screen.utf_8_io = 1
    ## terminal.screen.type <num>
    set terminal.screen.type = 2





##############################
# Automatically saved options
#

## terminal 
#  Terminal options.

  ## terminal.screen 
  #  Options specific to this terminal type (according to $TERM value).

    ## terminal.screen.m11_hack [0|1]
    set terminal.screen.m11_hack = 1





##############################
# Automatically saved options
#

## document 
#  Document options.

  ## document.html 
  #  Options concerning the display of HTML pages.

    ## document.html.display_tables [0|1]
    #  Display tables.
    set document.html.display_tables = 1



## ui 
#  User interface options.

  ## ui.leds 
  #  LEDs (visual indicators) options.

    ## ui.leds.enable [0|1]
    #  Enable LEDs. These visual indicators will inform you about various
    #  states.
    set ui.leds.enable = 1


  ## ui.sessions 
  #  Sessions settings.

    ## ui.sessions.auto_restore [0|1]
    #  Automatically restore the session at start.
    #  
    #  This feature requires bookmark support.
    set ui.sessions.auto_restore = 0

    ## ui.sessions.auto_save [0|1]
    #  Automatically save the session when quitting.
    #  
    #  This feature requires bookmark support.
    set ui.sessions.auto_save = 0

    ## ui.sessions.homepage <str>
    #  The URI to load either at startup time when no URI was given on the
    #  command line or when requested by the goto-url-home action. Set to "" if
    #  the environment variable WWW_HOME should be used as homepage URI instead.
    set ui.sessions.homepage = "http://localhost:3333"

    ## ui.sessions.keep_session_active [0|1]
    #  Keep the session active even if the last terminal exits.
    set ui.sessions.keep_session_active = 0


  ## ui.window_title [0|1]
  #  Set the window title when running in a windowing environment in an
  #  xterm-like terminal. This way the document's title is shown on the window
  #  titlebar.
  set ui.window_title = 1





##############################
# Automatically saved options
#

## document 
#  Document options.

  ## document.browse 
  #  Document browsing options (mainly interactivity).

    ## document.browse.forms 
    #  Options for handling of the forms interaction.

      ## document.browse.forms.insert_mode [0|1]
      #  The setting for this option affects how key presses are handled when
      #  one selects a text-input form-field. When enabled, one must explicitly
      #  'enter' a selected text-field to edit it; this prevents text fields
      #  from capturing key presses, such as presses of a scroll key, when it is
      #  inadvertently selected. When disabled, key presses are always inserted
      #  into a selected text field.
      set document.browse.forms.insert_mode = 0







##################################
# Automatically saved keybindings
#

bind "main" "r" = "reload"
bind "main" "Ctrl-R" = "none"
bind "main" "Ctrl-L" = "none"
bind "main" "Ctrl-F" = "none"
bind "main" "Ctrl-E" = "none"
bind "main" "Ctrl-B" = "none"
bind "main" "Ctrl-A" = "none"
